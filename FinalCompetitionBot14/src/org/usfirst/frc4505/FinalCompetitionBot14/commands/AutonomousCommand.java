// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc4505.FinalCompetitionBot14.commands;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc4505.FinalCompetitionBot14.Robot;
/**
 *
 */
public class  AutonomousCommand extends Command {
    boolean isFinished;
    public AutonomousCommand() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    // Called just before this Command runs the first time
    protected void initialize() {
    }
    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        //below is the code to open the arms, lower the catapult, close the arms, fire the catapult, and then move forward
        Robot.catapult.openClaws(-0.7, 0.6);
        Timer.delay(0.3);
        Robot.catapult.autoLowerCatapult();
        Timer.delay(0.3);
        Robot.catapult.closeClaws(-0.7, 0.6);
        Timer.delay(0.2);
        Robot.drivetrain.autoMoveForward(1.3, 0.5);
        Timer.delay(0.2);
        Robot.catapult.autoFireCatapult();
        isFinished = true;
        
        //below is the code to only move forward and then stop (THIS IS FOR NOT FIRING)
//        Robot.drivetrain.autoMoveForward(1.3, 0.5);
//        isFinished = true;
        
        //really old bad code underneath
//        Robot.catapult.autoLowerCatapult(); 
//        Robot.drivetrain.autoMoveForward(1.3,.5); //
//        Timer.delay(.5);
//        Robot.catapult.autoFireCatapult();
//        isFinished = true;
//        Timer.delay(.1);
    }
    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return isFinished;
    }
    // Called once after isFinished returns true
    protected void end() {
//        Robot.sensors.setColor("green");
//        Timer.delay(0.5);
//        Robot.sensors.setColor("off");
    }
    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
