// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc4505.MecanumBot14.subsystems;
import com.sun.squawk.util.MathUtils;
import org.usfirst.frc4505.MecanumBot14.RobotMap;
import org.usfirst.frc4505.MecanumBot14.commands.*;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import org.usfirst.frc4505.MecanumBot14.Robot;
/**
 *
 */
public class Sensors extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    AnalogChannel maxBotixUltra = RobotMap.sensorsMaxBotixUltra;
    AnalogChannel infraredSensor = RobotMap.sensorsInfraredSensor;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    DigitalOutput rgbRed = RobotMap.sensorsRgbRed;
    DigitalOutput rgbGreen = RobotMap.sensorsRgbGreen;
    DigitalOutput rgbBlue = RobotMap.sensorsRgbBlue;
    
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new SensorGroup());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }

    public double getRangeToWall() {
        double voltage_per_inch_V = (.009765625);
        double measured_Voltage = maxBotixUltra.getVoltage();
        double rangeInInches = (int) (measured_Voltage / voltage_per_inch_V);
        return rangeInInches;
    }

    public double getRangeToBall() {
//        double sensorRange = infraredSensor.getVoltage();
//        if (sensorRange >= 0.402 && sensorRange <= 2.314) {
//            return (int) (25.858 * MathUtils.pow(sensorRange, -1.155));
//        }
//        if (sensorRange < 0.402) {
//            return 0;
//        }
//        return -1;
        double voltage_per_inch_V = (.009765625);
        double measured_Voltage = infraredSensor.getVoltage();
        double rangeInInches = (int) (measured_Voltage / voltage_per_inch_V);
        return rangeInInches;
    }

    public void setColorBlue(boolean setColor) {
        rgbBlue.set(setColor);
    }
    
    public void setColorRed(boolean setColor) {
        rgbRed.set(setColor);
    }
    
    public void setColorGreen(boolean setColor) {
        rgbGreen.set(setColor);
    }
    
}
